<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='obr2html.xsl'?>

<repository lastmodified='20131018122615.853' name='Knopflerfish bundle repository - 4.0.1'>
  <resource id='Untitled--1296774357/0.0.0' symbolicname='Untitled--1296774357' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/kxml/kxml-2.3.0.kf4-001-source.jar' version='0.0.0'>
    <size>
      43816
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='1'/>
      <p n='symbolicname' v='Untitled--1296774357'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
  </resource>
  <resource id='org.knopflerfish.bundle.basicdriverlocator/4.0.0' presentationname='basicdriverlocator' symbolicname='org.knopflerfish.bundle.basicdriverlocator' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/basicdriverlocator/basicdriverlocator_all-4.0.0.jar' version='4.0.0'>
    <description>
      Basic device driver locator
    </description>
    <size>
      7078
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='basicdriverlocator'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.basicdriverlocator'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.device)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.device ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.bundlerepository/3.1.3' presentationname='Bundlerepository' symbolicname='org.knopflerfish.bundle.bundlerepository' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/bundlerepository/bundlerepository_all-3.1.3.jar' version='3.1.3'>
    <description>
      OBR bundle repository using the KF console and desktop
    </description>
    <size>
      175239
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/bundlerepository/readme.txt
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Bundlerepository'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.bundlerepository'/>
      <p n='version' t='version' v='3.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.console'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ungoverned.osgi.service.bundlerepository'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker
    </require>
    <require extend='false' filter='(&amp;(package=org.ungoverned.osgi.service.shell)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.ungoverned.osgi.service.shell
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.ungoverned.osgi.service.bundlerepository)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.ungoverned.osgi.service.bundlerepository
       ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.classpatcher/1.0.1' presentationname='Class Patcher' symbolicname='org.knopflerfish.bundle.classpatcher' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/classpatcher/classpatcher_all-1.0.1.jar' version='1.0.1'>
    <description>
      Implements a WeavingHook to allow patching of classes at load
       time using ASM
    </description>
    <size>
      63375
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id='utility'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Class Patcher'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.classpatcher'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.hooks.weaving)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.hooks.weaving ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.cm/4.0.1' presentationname='cm' symbolicname='org.knopflerfish.bundle.cm' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/cm/cm_all-4.0.1.jar' version='4.0.1'>
    <description>
      Configuration Management Service
    </description>
    <size>
      77833
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=cm/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='cm'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.cm'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.shared.cm'/>
      <p n='uses' v='org.osgi.service.cm'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=1.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,1.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.shared.cm)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.shared.cm ;version=[1.1.0,1.2.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.cm_cmd-IMPL/4.0.1' presentationname='CM-Commands-IMPL' symbolicname='org.knopflerfish.bundle.cm_cmd-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/cm_cmd/cm_cmd-4.0.1.jar' version='4.0.1'>
    <description>
      Commands for the CM service (IMPL)
    </description>
    <size>
      21265
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=cm_cmd/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='CM-Commands-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.cm_cmd-IMPL'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.shared.cm)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.shared.cm ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util.sort)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util.sort
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.cm_desktop/4.0.0' presentationname='CM-Desktop' symbolicname='org.knopflerfish.bundle.cm_desktop' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/cm_desktop/cm_desktop_all-4.0.0.jar' version='4.0.0'>
    <description>
      CM desktop plugin
    </description>
    <size>
      75263
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/metatype/cm_desktop/readme.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='CM-Desktop'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.cm_desktop'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.shared.cm'/>
      <p n='uses' v='org.osgi.service.cm'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.shared.cm)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.shared.cm ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util.metatype
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.metatype ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.comm-linux/3.0.0' presentationname='comm-linux' symbolicname='org.knopflerfish.bundle.comm-linux' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/comm-linux/comm-linux_all-3.0.0.jar' version='3.0.0'>
    <description>
      Native driver for linux javax.comm using the RXTX library.
       Note that this bundle is LGPL and contains full source to
       rxtx
    </description>
    <size>
      119720
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=serial
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='comm-linux'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.comm-linux'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.comm'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='gnu.io'/>
      <p n='uses' v='javax.comm'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=javax.comm)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.comm ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=gnu.io)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package gnu.io ;version=2.0.0
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.comm-win32/3.0.0' presentationname='comm-win32' symbolicname='org.knopflerfish.bundle.comm-win32' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/comm-win32/comm-win32_all-3.0.0.jar' version='3.0.0'>
    <description>
      Native driver for win32 javax.comm using Sun's COMM library
    </description>
    <size>
      38820
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=serial
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='comm-win32'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.comm-win32'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.comm'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=javax.comm)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.comm ;version=2.0.0
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.command/0.2.0' presentationname='command' symbolicname='org.knopflerfish.bundle.command' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/command/command_all-0.2.jar' version='0.2.0'>
    <description>
      Command Service
    </description>
    <size>
      35988
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='command'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.command'/>
      <p n='version' t='version' v='0.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.command'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.threadio)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.threadio ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.command ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.commandtty-IMPL/4.0.1' presentationname='TTY-Command-IMPL' symbolicname='org.knopflerfish.bundle.commandtty-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/commandtty/commandtty-4.0.1.jar' version='4.0.1'>
    <description>
      Command line system console (IMPL)
    </description>
    <size>
      8039
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='console'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='TTY-Command-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.commandtty-IMPL'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=null)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package null
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.commons-logging/2.0.0.kf4-001' presentationname='Commons-Logging' symbolicname='org.knopflerfish.bundle.commons-logging' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/commons-logging/commons-logging_all-2.0.0.kf4-001.jar' version='2.0.0.kf4-001'>
    <description>
      Apache Commons logging. Publishced under Apache License. See
       http://www.apache.org/licenses/LICENSE-2.0
    </description>
    <size>
      37622
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/commons-logging/readme.txt
    </documentation>
    <category id='lib'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons-Logging'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.commons-logging'/>
      <p n='version' t='version' v='2.0.0.kf4-001'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.log'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.log'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.0.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.3)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.0.3,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.component/4.0.3' presentationname='SCR' symbolicname='org.knopflerfish.bundle.component' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/component/component_all-4.0.3.jar' version='4.0.3'>
    <description>
      Declarative Services SCR
    </description>
    <size>
      76755
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SCR'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.component'/>
      <p n='version' t='version' v='4.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.component'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xmlpull.v1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.connectors/3.0.0' presentationname='Connection-Factories' symbolicname='org.knopflerfish.bundle.connectors' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/connectors/connectors_all-3.0.0.jar' version='3.0.0'>
    <description>
      OSGi IO http, socket and datagram-receive Connectors
    </description>
    <size>
      17940
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Connection-Factories'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.connectors'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.microedition.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.microedition.io
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.io ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.console/4.0.1' presentationname='Console' symbolicname='org.knopflerfish.bundle.console' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/console/console_all-4.0.1.jar' version='4.0.1'>
    <description>
      Knopflerfish Console Service
    </description>
    <size>
      41195
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=console/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Console'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.console'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.console'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.1.2'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.0.0,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.console2command-IMPL/2.0.0' presentationname='Console2Command-IMPL' symbolicname='org.knopflerfish.bundle.console2command-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/console2command/console2command-2.0.0.jar' version='2.0.0'>
    <description>
      Wrapper for KF console commands to OSGi 4.3 commands (IMPL)
    </description>
    <size>
      6843
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='command'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Console2Command-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.console2command-IMPL'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.0,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.consoletcp/3.0.0' presentationname='TCP-Console' symbolicname='org.knopflerfish.bundle.consoletcp' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/consoletcp/consoletcp_all-3.0.0.jar' version='3.0.0'>
    <description>
      Console Service Server accepting TCP connection.
    </description>
    <size>
      12139
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='console'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='TCP-Console'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.consoletcp'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.um.useradmin)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.um.useradmin ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.useradmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.useradmin ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.consoletelnet-IMPL/4.0.1' presentationname='Telnet-Console-IMPL' symbolicname='org.knopflerfish.bundle.consoletelnet-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/consoletelnet/consoletelnet-4.0.1.jar' version='4.0.1'>
    <description>
      Console service server accepting telnet connections. (IMPL)
    </description>
    <size>
      33382
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=consoletelnet/index.html
    </documentation>
    <category id='console'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Telnet-Console-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.consoletelnet-IMPL'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.useradmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.useradmin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.um.useradmin)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.um.useradmin ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.consoletty-IMPL/4.0.1' presentationname='TTY-Console-IMPL' symbolicname='org.knopflerfish.bundle.consoletty-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/consoletty/consoletty-4.0.1.jar' version='4.0.1'>
    <description>
      Console Service Command Line Console (IMPL)
    </description>
    <size>
      8222
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='console'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='TTY-Console-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.consoletty-IMPL'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.crimson/2.1.0.kf4-001' presentationname='Crimson-XML' symbolicname='org.knopflerfish.bundle.crimson' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/crimson/crimson-2.1.0.kf4-001.jar' version='2.1.0.kf4-001'>
    <description>
      The Crimson XML parser
    </description>
    <size>
      196915
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=crimson/index.html
    </documentation>
    <category id='lib'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Crimson-XML'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.crimson'/>
      <p n='version' t='version' v='2.1.0.kf4-001'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax.helpers'/>
      <p n='uses' v='org.xml.sax'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.parsers'/>
      <p n='uses' v='org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.crimson.jaxp'/>
      <p n='uses' v='javax.xml.parsers,org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax.ext'/>
      <p n='uses' v='org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.crimson.jaxp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.crimson.jaxp
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.desktop/4.0.1' presentationname='Desktop' symbolicname='org.knopflerfish.bundle.desktop' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/desktop/desktop_all-4.0.1.jar' version='4.0.1'>
    <description>
      Swing framework desktop
    </description>
    <size>
      880219
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=desktop/index.html
    </documentation>
    <copyright>
      Copyright (c) 2003-2013, KNOPFLERFISH project. All rights reserved.
    </copyright>
    <category id='console'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Desktop'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.desktop'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.component'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.console'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.1.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.desktop'/>
      <p n='uses' v='javax.swing,org.osgi.framework'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.log'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.log'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.remotefw'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.framework'/>
      <p n='uses' v='org.knopflerfish.util,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.sort'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.workerthread'/>
      <p n='uses' v='org.knopflerfish.util'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.event'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.prefs'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.startlevel)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.startlevel ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.event ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.2)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.2,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.remotefw)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.remotefw
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.filechooser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.filechooser
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.basic)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.basic
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf.metal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf.metal
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.text.html
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.accessibility)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.accessibility
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.eawt)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.apple.eawt
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util.sort)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util.sort ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util.workerthread)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util.workerthread ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.desktop_jvm/1.0.0' presentationname='desktop_jvm' symbolicname='org.knopflerfish.bundle.desktop_jvm' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/desktop_jvm/desktop_jvm_all-1.0.0.jar' version='1.0.0'>
    <description>
      JVM info desktop plugin
    </description>
    <size>
      14473
    </size>
    <documentation>
      http://www.knopflerfish.org
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='desktop_jvm'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.desktop_jvm'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.desktop)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.desktop
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.device/4.0.1' presentationname='Device-Manager' symbolicname='org.knopflerfish.bundle.device' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/device/device_all-4.0.1.jar' version='4.0.1'>
    <description>
      Device manager
    </description>
    <size>
      20251
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Device-Manager'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.device'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.device'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.device)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.device ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.2.0,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.dirdeployer/4.0.1' presentationname='Directory Deployer' symbolicname='org.knopflerfish.bundle.dirdeployer' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/dirdeployer/dirdeployer_all-4.0.1.jar' version='4.0.1'>
    <description>
      Monitors a set of file system directory for bundlesand configurations
       to deploy
    </description>
    <size>
      41919
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=dirdeployer/index.html
    </documentation>
    <category id='example'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Directory Deployer'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.dirdeployer'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.dirdeployer'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.shared.cm'/>
      <p n='uses' v='org.osgi.service.cm'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.startlevel)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.startlevel ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.shared.cm)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.shared.cm ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.dirdeployer)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.dirdeployer ;version=[0.0.0,1.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.event/4.0.1' presentationname='Event-Admin' symbolicname='org.knopflerfish.bundle.event' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/event/event_all-4.0.1.jar' version='4.0.1'>
    <description>
      Event Admin
    </description>
    <size>
      40635
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=event/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Event-Admin'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.event'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.event'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.event ;version=[1.3.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.frameworkcommands-IMPL/4.0.1' presentationname='FW-Commands-IMPL' symbolicname='org.knopflerfish.bundle.frameworkcommands-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/frameworkcommands/frameworkcommands-4.0.1.jar' version='4.0.1'>
    <description>
      Framework commands (IMPL)
    </description>
    <size>
      43180
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=frameworkcommands/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='FW-Commands-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.frameworkcommands-IMPL'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(service=org.osgi.service.log.LogService)' multiple='true' name='service' optional='false'>
      Import Service org.osgi.service.log.LogService
    </require>
    <require extend='false' filter='(service=org.knopflerfish.service.console.ConsoleService)' multiple='true' name='service' optional='false'>
      Import Service org.knopflerfish.service.console.ConsoleService
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.startlevel)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.startlevel ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.permissionadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.permissionadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.condpermadmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.condpermadmin ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.http/4.0.1' presentationname='HTTP-Server' symbolicname='org.knopflerfish.bundle.http' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/http/http_all-4.0.1.jar' version='4.0.1'>
    <description>
      HTTP/HTTPS Server
    </description>
    <size>
      116506
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=http/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='HTTP-Server'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.http'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.log'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.log'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.http'/>
      <p n='uses' v='javax.servlet,javax.servlet.http'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.http ;version=[1.2.0,1.3.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0)(!(version&gt;=2.6.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.5.0,2.6.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0)(!(version&gt;=2.6.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.5.0,2.6.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.knopflerfish.service.console
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.httpconsole/4.0.1' presentationname='httpconsole' symbolicname='org.knopflerfish.bundle.httpconsole' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/httpconsole/httpconsole_all-4.0.1.jar' version='4.0.1'>
    <size>
      70395
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=httpconsole/index.html
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='httpconsole'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.httpconsole'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.http ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.5.0,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.httproot-IMPL/4.0.0' presentationname='HTTP-root-IMPL' symbolicname='org.knopflerfish.bundle.httproot-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/httproot/httproot-4.0.0.jar' version='4.0.0'>
    <description>
      Demo HTTP Service user that publishes on the root (IMPL)
    </description>
    <size>
      20495
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='example'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='HTTP-root-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.httproot-IMPL'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.http ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.io/4.0.0' presentationname='io' symbolicname='org.knopflerfish.bundle.io' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/io/io_all-4.0.0.jar' version='4.0.0'>
    <description>
      IO
    </description>
    <size>
      12852
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='io'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.io'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.microedition.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.io'/>
      <p n='uses' v='javax.microedition.io'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.microedition.io)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.microedition.io ;version=[0.0.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.io ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.jinidriver/0.1.0' presentationname='Jini-Driver' symbolicname='org.knopflerfish.bundle.jinidriver' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/jinidriver/jinidriver_all-0.1.0.jar' version='0.1.0'>
    <description>
      Jini driver (experimental) using Sun's jini impl. jini-core.jar
       and jini-ext.jar, see http://wwws.sun.com/software/jini/licensing/SCSL3_JiniTSA1.html
    </description>
    <size>
      204973
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jini-Driver'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.jinidriver'/>
      <p n='version' t='version' v='0.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.core.lookup'/>
      <p n='uses' v='net.jini.core.discovery,net.jini.core.entry,net.jini.core.event,net.jini.core.lease'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.core.entry'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.core.event'/>
      <p n='uses' v='net.jini.core.lease'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.core.lease'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.core.discovery'/>
      <p n='uses' v='net.jini.core.lookup'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.admin'/>
      <p n='uses' v='net.jini.core.discovery,net.jini.core.entry'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.discovery'/>
      <p n='uses' v='net.jini.core.discovery,net.jini.core.event,net.jini.core.lease,net.jini.core.lookup'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.lookup'/>
      <p n='uses' v='net.jini.core.discovery,net.jini.core.entry,net.jini.core.event,net.jini.core.lease,net.jini.core.lookup,net.jini.discovery,net.jini.lease'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.lookup.entry'/>
      <p n='uses' v='net.jini.core.entry'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.jini.lease'/>
      <p n='uses' v='net.jini.core.event,net.jini.core.lease'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.jini'/>
      <p n='uses' v='net.jini.core.lookup'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.core.lookup)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.core.lookup
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.core.entry)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.core.entry
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.core.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.core.event
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.core.lease)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.core.lease
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.core.discovery)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.core.discovery
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.admin)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.admin
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.discovery)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.discovery
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.lookup)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.lookup
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.lookup.entry)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.lookup.entry
    </require>
    <require extend='false' filter='(&amp;(package=net.jini.lease)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package net.jini.lease
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.jini)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.jini ;version=1.0.0
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.junit/3.8.1.kf4-001' presentationname='JUnit' symbolicname='org.knopflerfish.bundle.junit' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/junit/junit_all-3.8.1.kf4-001.jar' version='3.8.1.kf4-001'>
    <description>
      JUnit support
    </description>
    <size>
      146393
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=junit
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JUnit'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.junit'/>
      <p n='version' t='version' v='3.8.1.kf4-001'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.junit'/>
      <p n='uses' v='junit.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.framework'/>
      <p n='version' t='version' v='3.8.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.border)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.border
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=3.8.1))' multiple='false' name='package' optional='false'>
      Import package junit.framework ;version=3.8.1
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.knopflerfish.service.console
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.junit)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.junit ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.http ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.junit_runner/4.0.0' presentationname='JUnitRunner' symbolicname='org.knopflerfish.bundle.junit_runner' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/junit_runner/junit_runner_all-4.0.0.jar' version='4.0.0'>
    <description>
      Grunt, the JUnit test runner. Runs JUnit tests registered in
       the framework and dumps results to XML files.
    </description>
    <size>
      12275
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/junit/junit_runner/readme.txt
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JUnitRunner'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.junit_runner'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.junit)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.junit
    </require>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package junit.framework
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.kf_metatype/4.0.1' presentationname='KF-XML-Metatype' symbolicname='org.knopflerfish.bundle.kf_metatype' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/kf_metatype/kf_metatype_all-4.0.1.jar' version='4.0.1'>
    <description>
      XML format support for CM and Metatype
    </description>
    <size>
      103544
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='util'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='KF-XML-Metatype'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.kf_metatype'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.metatype'/>
      <p n='uses' v='net.n3.nanoxml,org.knopflerfish.service.log,org.knopflerfish.util,org.kxml2.io,org.osgi.framework,org.osgi.service.cm,org.osgi.service.metatype,org.osgi.util.tracker,org.xmlpull.v1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.n3.nanoxml'/>
      <p n='version' t='version' v='2.2.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.metatype ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util.metatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util.metatype
    </require>
    <require extend='false' filter='(&amp;(package=org.kxml2.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.kxml2.io
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xmlpull.v1
    </require>
    <require extend='false' filter='(&amp;(package=net.n3.nanoxml)(version&gt;=2.2.1)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package net.n3.nanoxml ;version=[2.2.1,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.kxml-LIB/2.3.0.kf4-001' presentationname='kXML 2-LIB' symbolicname='org.knopflerfish.bundle.kxml-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/kxml/kxml-2.3.0.kf4-001.jar' version='2.3.0.kf4-001'>
    <description>
      Packing of kXML 2 as a bundle (LIB)
    </description>
    <size>
      56797
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=kmxl/index.html
    </documentation>
    <category id='lib'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='kXML 2-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.kxml-LIB'/>
      <p n='version' t='version' v='2.3.0.kf4-001'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xmlpull.v1'/>
      <p n='version' t='version' v='1.1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kxml2.io'/>
      <p n='uses' v='org.xmlpull.v1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kxml2.kdom'/>
      <p n='uses' v='org.xmlpull.v1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kxml2.wap'/>
      <p n='uses' v='org.xmlpull.v1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kxml2.wap.syncml'/>
      <p n='uses' v='org.kxml2.wap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kxml2.wap.wml'/>
      <p n='uses' v='org.kxml2.wap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.kxml2.wap.wv'/>
      <p n='uses' v='org.kxml2.wap'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
  </resource>
  <resource id='org.knopflerfish.bundle.logcommands-IMPL/4.0.0' presentationname='LogCommands-IMPL' symbolicname='org.knopflerfish.bundle.logcommands-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/logcommands/logcommands-4.0.0.jar' version='4.0.0'>
    <description>
      Provides log commands for the Knopflerfish console (IMPL)
    </description>
    <size>
      16578
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=logcommands/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='LogCommands-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.logcommands-IMPL'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.0,3.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.measurement-LIB/4.0.0' presentationname='measurement-LIB' symbolicname='org.knopflerfish.bundle.measurement-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/measurement/measurement-4.0.0.jar' version='4.0.0'>
    <description>
      Measurement API (LIB)
    </description>
    <size>
      9195
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='api'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='measurement-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.measurement-LIB'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.measurement'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.util.measurement)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.measurement ;version=[1.0.0,1.1.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.metatype-LIB/4.0.0' presentationname='metatype-LIB' symbolicname='org.knopflerfish.bundle.metatype-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/metatype/metatype-4.0.0.jar' version='4.0.0'>
    <description>
      Metatype API (LIB)
    </description>
    <size>
      5287
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='api'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='metatype-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.metatype-LIB'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.metatype'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.oscar-shell/2.0.0' presentationname='oscar-shell' symbolicname='org.knopflerfish.bundle.oscar-shell' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/oscar-shell/oscar-shell_all-2.0.0.jar' version='2.0.0'>
    <description>
      Compatability layer for bundles using the Oscar shell API.
       See readme.txt for details.
    </description>
    <size>
      7916
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles_opt/oscar-shell/readme.txt
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='oscar-shell'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.oscar-shell'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ungoverned.osgi.service.shell'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.ungoverned.osgi.service.shell)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.ungoverned.osgi.service.shell ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.position-LIB/4.0.0' presentationname='position-LIB' symbolicname='org.knopflerfish.bundle.position-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/position/position-4.0.0.jar' version='4.0.0'>
    <description>
      Position API (LIB)
    </description>
    <size>
      4346
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='api'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='position-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.position-LIB'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.position'/>
      <p n='uses' v='org.osgi.util.measurement'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.util.position)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.position ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.measurement)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.measurement ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.prefs/4.0.1' presentationname='prefs' symbolicname='org.knopflerfish.bundle.prefs' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/prefs/prefs_all-4.0.1.jar' version='4.0.1'>
    <description>
      Preferences
    </description>
    <size>
      25429
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=prefs/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='prefs'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.prefs'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.prefs'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.prefs ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.util
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.remotefw-API/4.0.0' presentationname='RemoteFW-API' symbolicname='org.knopflerfish.bundle.remotefw-API' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/remotefw/remotefw_api-4.0.0.jar' version='4.0.0'>
    <description>
      Remote Framework (API)
    </description>
    <size>
      1693
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=remotefw/index.html
    </documentation>
    <category id='api'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='RemoteFW-API'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.remotefw-API'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.remotefw'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.remotefw)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.remotefw ;version=[0.0.0,1.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.rxtxcomm-linux-arm-LIB/2.1.7.1' presentationname='RXTXcomm-linux-arm-LIB' symbolicname='org.knopflerfish.bundle.rxtxcomm-linux-arm-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/rxtxcomm-linux-arm/rxtxcomm-linux-arm-2.1.7.1.jar' version='2.1.7.1'>
    <description>
      RXTX comm native driver for Linux/arm_le (LIB)
    </description>
    <size>
      166997
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=serial
    </documentation>
    <category id='service'/>
    <capability name='fragment'>
      <p n='host' v='org.knopflerfish.bundle.rxtxcomm-API'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='org.knopflerfish.bundle.rxtxcomm-API'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='RXTXcomm-linux-arm-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.rxtxcomm-linux-arm-LIB'/>
      <p n='version' t='version' v='2.1.7.1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=org.knopflerfish.bundle.rxtxcomm-API)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host org.knopflerfish.bundle.rxtxcomm-API
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.rxtxcomm-linux-x86-LIB/2.2.0.pre2' presentationname='RXTXcomm-linux-x86-LIB' symbolicname='org.knopflerfish.bundle.rxtxcomm-linux-x86-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/rxtxcomm-linux-x86/rxtxcomm-linux-x86-2.2.0.pre2.jar' version='2.2.0.pre2'>
    <description>
      RXTX comm native driver for Linux/x86 (LIB)
    </description>
    <size>
      91323
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=serial
    </documentation>
    <category id='service'/>
    <capability name='fragment'>
      <p n='host' v='org.knopflerfish.bundle.rxtxcomm-API'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='org.knopflerfish.bundle.rxtxcomm-API'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='RXTXcomm-linux-x86-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.rxtxcomm-linux-x86-LIB'/>
      <p n='version' t='version' v='2.2.0.pre2'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=org.knopflerfish.bundle.rxtxcomm-API)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host org.knopflerfish.bundle.rxtxcomm-API
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.scrcommands-IMPL/4.0.1' presentationname='ScrCommands-IMPL' symbolicname='org.knopflerfish.bundle.scrcommands-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/scrcommands/scrcommands-4.0.1.jar' version='4.0.1'>
    <description>
      Provides SCR admin commands for the Knopflerfish console (IMPL)
    </description>
    <size>
      14576
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=scrcommands/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ScrCommands-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.scrcommands-IMPL'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.console)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.console ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.serialportdevice/4.0.0' presentationname='serialportdevice' symbolicname='org.knopflerfish.bundle.serialportdevice' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/serialportdevice/serialportdevice_all-4.0.0.jar' version='4.0.0'>
    <description>
      Serial port device
    </description>
    <size>
      7655
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=serial
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='serialportdevice'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.serialportdevice'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.serial'/>
      <p n='uses' v='javax.comm,org.osgi.service.device'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.comm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.comm
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.serial)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.serial
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.device)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.device ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.sslj2sp-IMPL/4.0.0' presentationname='sslj2sp-IMPL' symbolicname='org.knopflerfish.bundle.sslj2sp-IMPL' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/sslj2sp/sslj2sp-4.0.0.jar' version='4.0.0'>
    <description>
      SSL Provider using the Java 2 security architecture. (IMPL)
    </description>
    <size>
      17964
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/sslj2sp/readme.txt
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='sslj2sp-IMPL'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.sslj2sp-IMPL'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.threadio/0.2.0' presentationname='threadio' symbolicname='org.knopflerfish.bundle.threadio' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/threadio/threadio_all-0.2.0.jar' version='0.2.0'>
    <description>
      ThreadIO Service
    </description>
    <size>
      7029
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='threadio'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.threadio'/>
      <p n='version' t='version' v='0.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.threadio'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.threadio)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.threadio ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.trayicon_fw/4.0.0' presentationname='FW-Tray' symbolicname='org.knopflerfish.bundle.trayicon_fw' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/trayicon_fw/trayicon_fw-4.0.0.jar' version='4.0.0'>
    <description>
      Framework tray icon. Allows basic control of the framework
       using the windows system tray.
    </description>
    <size>
      13103
    </size>
    <documentation>
      https://www.knopflerfish.org/svn/knopflerfish.org/trunk/osgi/bundles/trayicon/trayicon_fw/readme.txt
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='FW-Tray'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.trayicon_fw'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.startlevel)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.startlevel ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.upnp-API/4.0.0' presentationname='upnp-API' symbolicname='org.knopflerfish.bundle.upnp-API' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/upnp/upnp_api-4.0.0.jar' version='4.0.0'>
    <description>
      UPnP (API)
    </description>
    <size>
      5845
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='api'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='upnp-API'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.upnp-API'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.upnp'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.upnp)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.upnp ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.useradmin/4.0.0' presentationname='UserAdmin' symbolicname='org.knopflerfish.bundle.useradmin' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/useradmin/useradmin_all-4.0.0.jar' version='4.0.0'>
    <description>
      User Administration Service
    </description>
    <size>
      44015
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='UserAdmin'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.useradmin'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.um.ipam'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.um.useradmin'/>
      <p n='uses' v='org.osgi.service.useradmin'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.useradmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.um.ipam)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.um.ipam ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.um.useradmin)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.um.useradmin ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.event ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.useradmin)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.useradmin ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.util-LIB/4.1.0' presentationname='util-LIB' symbolicname='org.knopflerfish.bundle.util-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/util/util-4.1.0.jar' version='4.1.0'>
    <description>
      Misc utilities (LIB)
    </description>
    <size>
      47197
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html
    </documentation>
    <category id='util'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='util-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.util-LIB'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.framework'/>
      <p n='uses' v='org.knopflerfish.util,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.sort'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.util.workerthread'/>
      <p n='uses' v='org.knopflerfish.util'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.xalan/2.7.1.kf3_01' presentationname='Xalan' symbolicname='org.knopflerfish.bundle.xalan' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/xalan/xalan-2.7.1.kf3_01.jar' version='2.7.1.kf3_01'>
    <description>
      The Apache Xalan-Java XML transformer
    </description>
    <size>
      1804821
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=xalan/index.html
    </documentation>
    <copyright>
      http://www.apache.org/licenses/LICENSE-2.0
    </copyright>
    <category id='lib'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Xalan'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.xalan'/>
      <p n='version' t='version' v='2.7.1.kf3_01'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0.selectFirst'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.dom'/>
      <p n='uses' v='javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0.selectFirst'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.sax'/>
      <p n='uses' v='javax.xml.transform,javax.xml.transform.stream'/>
      <p n='version' t='version' v='1.3.0.selectFirst'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.stream'/>
      <p n='uses' v='javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0.selectFirst'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xalan.processor'/>
      <p n='uses' v='javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xpath.jaxp'/>
      <p n='uses' v='javax.xml.transform'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xalan)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xalan
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xalan.processor)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xalan.processor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xpath.jaxp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xpath.jaxp
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.serialize)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.serialize
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.serializer)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.serializer
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.traversal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.traversal
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.xerces/2.10.1.kf3' presentationname='Xerces-J' symbolicname='org.knopflerfish.bundle.xerces' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/xerces/xerces-2.10.1.kf3.jar' version='2.10.1.kf3'>
    <description>
      The Apache Xerces2 Java XML parser
    </description>
    <size>
      1619325
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=xerces/index.html
    </documentation>
    <copyright>
      http://www.apache.org/licenses/LICENSE-2.0
    </copyright>
    <category id='lib'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Xerces-J'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.xerces'/>
      <p n='version' t='version' v='2.10.1.kf3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.datatype'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.parsers'/>
      <p n='uses' v='javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.dom'/>
      <p n='uses' v='javax.xml.transform,org.w3c.dom'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.sax'/>
      <p n='uses' v='javax.xml.transform,javax.xml.transform.stream,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.transform.stream'/>
      <p n='uses' v='javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.validation'/>
      <p n='uses' v='javax.xml.transform,javax.xml.transform.stream,org.w3c.dom,org.w3c.dom.ls,org.xml.sax'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.xpath'/>
      <p n='uses' v='javax.xml.namespace,org.xml.sax'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.bootstrap'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.css'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.stylesheets,org.w3c.dom.views'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.events'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.views'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.html'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.ls'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.events,org.w3c.dom.traversal'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.ranges'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.stylesheets'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.traversal'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.views'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.w3c.dom.xpath'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax'/>
      <p n='version' t='version' v='2.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax.ext'/>
      <p n='uses' v='org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='2.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xml.sax.helpers'/>
      <p n='uses' v='org.xml.sax'/>
      <p n='version' t='version' v='2.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver'/>
      <p n='uses' v='javax.xml.parsers,org.apache.xml.resolver.helpers,org.apache.xml.resolver.readers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.apps'/>
      <p n='uses' v='org.apache.xml.resolver,org.apache.xml.resolver.helpers,org.apache.xml.resolver.tools,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.helpers'/>
      <p n='uses' v='javax.xml.transform,javax.xml.transform.sax,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.readers'/>
      <p n='uses' v='javax.xml.parsers,org.apache.xml.resolver,org.apache.xml.resolver.helpers,org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.resolver.tools'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.transform,javax.xml.transform.sax,org.apache.xml.resolver,org.apache.xml.resolver.helpers,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.serializer'/>
      <p n='uses' v='javax.xml.transform,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.html.dom'/>
      <p n='uses' v='org.apache.xerces.dom,org.w3c.dom,org.w3c.dom.html,org.xml.sax'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.wml'/>
      <p n='uses' v='org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.wml.dom'/>
      <p n='uses' v='org.apache.wml,org.apache.xerces.dom,org.w3c.dom'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom'/>
      <p n='uses' v='org.apache.xerces.dom.events,org.apache.xerces.dom3.as,org.apache.xerces.parsers,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xs,org.apache.xml.serialize,org.w3c.dom,org.w3c.dom.events,org.w3c.dom.ls,org.w3c.dom.ranges,org.w3c.dom.traversal'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom.events'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.events,org.w3c.dom.views'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.dom3.as'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.ls'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.validation,org.apache.xerces.dom,org.apache.xerces.jaxp.validation,org.apache.xerces.parsers,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xs,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp.datatype'/>
      <p n='uses' v='javax.xml.datatype,javax.xml.namespace,org.apache.xerces.util'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.jaxp.validation'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.validation,org.apache.xerces.dom,org.apache.xerces.parsers,org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xs,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.parsers'/>
      <p n='uses' v='org.apache.xerces.dom,org.apache.xerces.dom3.as,org.apache.xerces.util,org.apache.xerces.xinclude,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xerces.xpointer,org.apache.xerces.xs,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.util'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.parsers,org.apache.xerces.dom,org.apache.xerces.jaxp,org.apache.xerces.xni,org.apache.xerces.xni.grammars,org.apache.xerces.xni.parser,org.apache.xml.resolver,org.apache.xml.resolver.readers,org.w3c.dom,org.w3c.dom.ls,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xinclude'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xpointer'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni'/>
      <p n='uses' v='org.apache.xerces.xni.parser'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.grammars'/>
      <p n='uses' v='org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xni.parser'/>
      <p n='uses' v='org.apache.xerces.xni'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xpointer'/>
      <p n='uses' v='org.apache.xerces.util,org.apache.xerces.xinclude,org.apache.xerces.xni,org.apache.xerces.xni.parser,org.apache.xerces.xs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xs'/>
      <p n='uses' v='org.w3c.dom,org.w3c.dom.ls'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xerces.xs.datatypes'/>
      <p n='uses' v='javax.xml.datatype,javax.xml.namespace,org.apache.xerces.xni,org.apache.xerces.xs'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.serialize'/>
      <p n='uses' v='org.apache.xerces.dom,org.apache.xerces.util,org.apache.xerces.xni,org.w3c.dom,org.w3c.dom.html,org.w3c.dom.ls,org.w3c.dom.traversal,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.html.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.html.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.wml)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.wml
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.wml.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.wml.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.dom.events
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom3.as)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.dom3.as
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.jaxp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.jaxp
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.jaxp.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.jaxp.datatype
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.jaxp.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.jaxp.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xinclude)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xinclude
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xni
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni.grammars)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xni.grammars
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xni.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xni.parser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xpointer)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xpointer
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xs)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.xs.datatypes)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xerces.xs.datatypes
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.resolver.apps)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.resolver.apps ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.resolver.helpers)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.resolver.helpers ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.resolver.readers)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.resolver.readers ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.resolver.tools)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.resolver.tools ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.resolver)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.resolver ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.serializer)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.serializer ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.bootstrap)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.bootstrap ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.css)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.css ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.events)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.events ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.html)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.html ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ranges)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ranges ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.stylesheets)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.stylesheets ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.traversal)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.traversal ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.views)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.views ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.xpath)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.xpath ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=2.0.2))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext ;version=2.0.2
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=2.0.2))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=2.0.2
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=2.0.2))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=2.0.2
    </require>
    <require extend='false' filter='(&amp;(package=sun.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.io
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.serialize)(version&gt;=0.0.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.serialize ;version=[0.0.0,1.0.0)
    </require>
  </resource>
  <resource id='org.knopflerfish.bundle.xml-LIB/4.0.0' presentationname='xml-LIB' symbolicname='org.knopflerfish.bundle.xml-LIB' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/xml/xml-4.0.0.jar' version='4.0.0'>
    <description>
      XML (LIB)
    </description>
    <size>
      4792
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=xml/index.html
    </documentation>
    <category id='api'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='xml-LIB'/>
      <p n='symbolicname' v='org.knopflerfish.bundle.xml-LIB'/>
      <p n='version' t='version' v='4.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.xml'/>
      <p n='uses' v='javax.xml.parsers,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
  </resource>
  <resource id='org.knopflerfish.log/4.0.1' presentationname='Log Service' symbolicname='org.knopflerfish.log' uri='http://www.knopflerfish.org/releases/4.0.1/osgi/jars/log/log_all-4.0.1.jar' version='4.0.1'>
    <description>
      The Knopflerfish OSGi log service
    </description>
    <size>
      42527
    </size>
    <documentation>
      http://www.knopflerfish.org/releases/4.0.1/docs/bundledoc/index.html?docpage=log/index.html
    </documentation>
    <category id='service'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Log Service'/>
      <p n='symbolicname' v='org.knopflerfish.log'/>
      <p n='version' t='version' v='4.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.log'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.log'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.knopflerfish.service.log ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
  </resource>
</repository>